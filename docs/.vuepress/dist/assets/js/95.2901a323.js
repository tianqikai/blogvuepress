(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{1011:function(t,s,a){"use strict";a.r(s);var _=a(26),n=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"_2-mybatis核心模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-mybatis核心模块"}},[t._v("#")]),t._v(" 2. Mybatis核心模块")]),t._v(" "),_("h2",{attrs:{id:"_2-1-源码架构分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-源码架构分析"}},[t._v("#")]),t._v(" 2.1 源码架构分析")]),t._v(" "),_("p",[_("a",{attrs:{"data-fancybox":"",title:"源码架构分析",href:"./image/mybatis04.jpg"}},[_("img",{attrs:{src:a(735),alt:"源码架构分析"}})])]),t._v(" "),_("ol",[_("li",[_("strong",[t._v("基础支撑层")]),t._v("：技术组件专注于底层技术实现，通用性较强无业务含义；")]),t._v(" "),_("li",[_("strong",[t._v("核心处理层")]),t._v("：业务组件专注 MyBatis 的业务流程实现，依赖于基础支撑层；")]),t._v(" "),_("li",[_("strong",[t._v("接口层")]),t._v("：MyBatis 对外提供的访问接口，面向 SqlSession 编程；")])]),t._v(" "),_("p",[_("strong",[t._v("思考题：系统为什么要分层？")])]),t._v(" "),_("ol",[_("li",[t._v("代码和系统的可维护性更高。系统分层之后，每个层次都有自己的定位，每个层次内部\nMyBatis源码结构.xmind\n的组件都有自己的分工，系统就会变得很清晰，维护起来非常明确；")]),t._v(" "),_("li",[t._v("方便开发团队分工和开发效率的提升；举个例子，mybatis 这么大的一个源码框架不可\n能是一个人开发的，他需要一个团队，团队之间肯定有分工，既然有了层次的划分，分\n工也会变得容易，开发人员可以专注于某一层的某一个模块的实现，专注力提升了，开\n发效率自然也会提升；")]),t._v(" "),_("li",[t._v("提高系统的伸缩性和性能。系统分层之后，我们只要把层次之间的调用接口明确了，那\n我们就可以从逻辑上的分层变成物理上的分层。当系统并发量吞吐量上来了，怎么办？\n为了提高系统伸缩性和性能，我们可以把不同的层部署在不同服务器集群上，不同的组\n件放在不同的机器上，用多台机器去抗压力，这就提高了系统的性能。压力大的时候扩\n展节点加机器，压力小的时候，压缩节点减机器，系统的伸缩性就是这么来的；")])]),t._v(" "),_("h3",{attrs:{id:"_2-1-1-mybatis整体设计思想"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-mybatis整体设计思想"}},[t._v("#")]),t._v(" 2.1.1 Mybatis整体设计思想")]),t._v(" "),_("p",[t._v("从源码的架构分析，特别是接口层的设计，可以看出来MyBatis的整体架构符合"),_("strong",[t._v("门面模式（外观模式）的")]),t._v("。\n门面模式定义：提供了一个统一的接口，用来访问子系统中的一群接口。外观模式定义了一\n个高层接口，让子系统更容易使用。类图如下：")]),t._v(" "),_("p",[_("strong",[t._v("Facade 角色")]),t._v("：提供一个外\n观接口，对外，它提供一\n个易于客户端访问的接\n口，对内，它可以访问子\n系统中的所有功能。、")]),t._v(" "),_("p",[_("strong",[t._v("SubSystem（子系统）角色")]),t._v("：子系统在整个系统中\n可以是一个或多个模块，\n每个模块都有若干类组\n成，这些类可能相互之间\n有着比较复杂的关系。")]),t._v(" "),_("p",[_("strong",[t._v("门面模式优点")]),t._v("：使复杂子系统的接口变的简单可用，减少了客户端对子系统的依赖，达到了\n"),_("strong",[t._v("解耦的效果")]),t._v("；遵循了 OO 原则中的"),_("strong",[t._v("迪米特法则")]),t._v("，对内封装具体细节，对外只暴露必要的接口。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("门面模式使用场景：")]),t._v(" "),_("ol",[_("li",[t._v("一个复杂的模块或子系统提供一个供外界访问的接口")]),t._v(" "),_("li",[t._v("子系统相对独立 ― 外界对子系统的访问只要黑箱操作即可")])])])])}),[],!1,null,null,null);s.default=n.exports},735:function(t,s,a){t.exports=a.p+"assets/img/mybatis04.5ff78b40.jpg"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{1484:function(e,n,i){"use strict";i.r(n);var t=i(26),_=Object(t.a)({},(function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"_1-feign简介"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-feign简介"}},[e._v("#")]),e._v(" 1. Feign简介")]),e._v(" "),i("p",[e._v("Feign 是 Spring Cloud Netflix 组件中的一个"),i("strong",[e._v("轻量级 RESTful 的 HTTP 服务客户端")]),e._v("，实现了负载均衡和 Rest 调用的开源框架，封装了 Ribbon 和 RestTemplate，实现了 WebService 的面向接口编程，进一步降低了项目的耦合度。")]),e._v(" "),i("ol",[i("li",[i("p",[i("strong",[e._v("Feign 内置了 Ribbon")]),e._v("，用来做客户端负载均衡调用服务注册中心的服务。")])]),e._v(" "),i("li",[i("p",[e._v("Feign 本身并不支持 Spring MVC 的注解，它有一套自己的注解，为了更方便的使用，Spring Cloud 孵化了OpenFeign。")])]),e._v(" "),i("li",[i("p",[e._v("Feign 是一种声明式、模板化的 HTTP 客户端（仅在 Consumer 中使用）。")])]),e._v(" "),i("li",[i("p",[e._v("Feign 支持的注解和用法请参考官方文档：https://github.com/OpenFeign/feign 或 spring.io 官网文档")])]),e._v(" "),i("li",[i("p",[e._v("Feign 的使用方式是：使用 Feign 的注解定义接口，调用这个接口，就可以调用服务注册中心的服务。")])])]),e._v(" "),i("h2",{attrs:{id:"_1-1-feign-解决什么问题"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-feign-解决什么问题"}},[e._v("#")]),e._v(" 1.1 Feign 解决什么问题")]),e._v(" "),i("p",[e._v("Feign 旨在使编写 JAVA HTTP 客户端变得更加容易，Feign 简化了 RestTemplate 代码，实现了 Ribbon 负载均衡，使代码变得更加简洁，也少了客户端调用的代码，"),i("strong",[e._v("使用 Feign 实现负载均衡是首选方案")]),e._v("。")]),e._v(" "),i("p",[i("strong",[e._v("只需要你创建一个接口，然后在上面添加注解即可")])]),e._v(" "),i("p",[e._v("Feign 是声明式服务调用组件，其核心就是：像调用本地方法一样调用远程方法，"),i("strong",[e._v("无感知远程 HTTP 请求")]),e._v("。")]),e._v(" "),i("ol",[i("li",[i("p",[e._v("它解决了让开发者调用远程接口就跟调用本地方法一样的体验，开发者完全感知不到这是远程方法，更感知不到这是个 HTTP 请求。无需关注与远程的交互细节，更无需关注分布式环境开发。")])]),e._v(" "),i("li",[i("p",[e._v("它像 Dubbo 一样，Consumer 直接调用 Provider 接口方法，而不需要通过常规的 Http Client 构造请求再解析返回数据。")])])]),e._v(" "),i("h2",{attrs:{id:"_1-2-openfeign简介"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-openfeign简介"}},[e._v("#")]),e._v(" 1.2  OpenFeign简介")]),e._v(" "),i("p",[e._v("OpenFeign 是 Spring Cloud 在 Feign 的基础上支持了 Spring MVC 的注解，如 @RequesMapping 、\n@Pathvariable 等等。")]),e._v(" "),i("p",[e._v("OpenFeign 的 @FeignClient 可以解析 SpringMVC 的 @RequestMapping 注解下的接口，并通过动态代理的方式产生实现类，实现类中做负载均衡并调用服务。")])])}),[],!1,null,null,null);n.default=_.exports}}]);
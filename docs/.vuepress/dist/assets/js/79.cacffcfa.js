(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{1454:function(s,t,e){"use strict";e.r(t);var a=e(26),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_6-redis高可用集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-redis高可用集群"}},[s._v("#")]),s._v(" 6. Redis高可用集群")]),s._v(" "),a("h2",{attrs:{id:"_6-1-redis主从复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-redis主从复制"}},[s._v("#")]),s._v(" 6.1 Redis主从复制")]),s._v(" "),a("h3",{attrs:{id:"_6-1-1-redis主从拓扑-一主一从"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1-redis主从拓扑-一主一从"}},[s._v("#")]),s._v(" 6.1.1 Redis主从拓扑-一主一从")]),s._v(" "),a("p",[a("strong",[s._v("一主一从")]),s._v("：用于主节点故障转移从节点，当主节点的“写”命令并发高且需要持久化，可以只在从节点开启AOF（主节点不需要）")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"Redis主从拓扑",href:"./image/rediscopy.jpg"}},[a("img",{attrs:{src:e(775),alt:"Redis主从拓扑"}})])]),s._v(" "),a("h3",{attrs:{id:"_6-1-2-redis主从拓扑-redis主从拓扑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2-redis主从拓扑-redis主从拓扑"}},[s._v("#")]),s._v(" 6.1.2 Redis主从拓扑-Redis主从拓扑")]),s._v(" "),a("p",[a("strong",[s._v("一主多从")]),s._v("："),a("strong",[s._v("针对“读”较多的场景")]),s._v("，“读”由多个从节点来分担，但节点越多，主节点同步到多节点的次数也越多，影响带宽，也加重主节点的稳定")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"Redis主从拓扑",href:"./image/rediscopy02.jpg"}},[a("img",{attrs:{src:e(776),alt:"Redis主从拓扑"}})])]),s._v(" "),a("h3",{attrs:{id:"_6-1-3-复制原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-3-复制原理"}},[s._v("#")]),s._v(" 6.1.3 复制原理")]),s._v(" "),a("p",[s._v("执行slave master port后，与主节点连接，同步主节点的数据,6380:>info replication：查看主从及同步信息\n"),a("a",{attrs:{"data-fancybox":"",title:"Redis主从拓扑",href:"./image/rediscopy03.jpg"}},[a("img",{attrs:{src:e(777),alt:"Redis主从拓扑"}})])]),s._v(" "),a("h2",{attrs:{id:"_6-2-哨兵模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-哨兵模式"}},[s._v("#")]),s._v(" 6.2 哨兵模式")]),s._v(" "),a("p",[s._v("反客为主的自动版，能够后台监控主机是否故障，如果故障了根据投票数自动将从库转换为主库")]),s._v(" "),a("h2",{attrs:{id:"_6-3-redis高可用集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-redis高可用集群"}},[s._v("#")]),s._v(" 6.3 Redis高可用集群")]),s._v(" "),a("p",[s._v("分布式数据库把整个数据按分区规则映射到多个节点，即把数据划分到多个节点上，每个节点负责整体数据的一个子集。\n比如我们库有900条用户数据，有3个redis节点，将900条分成3份，分别存入到3个redis节点")]),s._v(" "),a("p",[s._v("RedisCluster采用了哈希分区的“虚拟槽分区”方式（哈希分区分节点取余、一致性哈希分区和虚拟槽分区）。")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"Redis高可用集群",href:"./image/redis51.jpg"}},[a("img",{attrs:{src:e(778),alt:"Redis高可用集群"}})])]),s._v(" "),a("h3",{attrs:{id:"_6-3-2-虚拟槽分区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-虚拟槽分区"}},[s._v("#")]),s._v(" 6.3.2 虚拟槽分区")]),s._v(" "),a("p",[s._v("RedisCluster采用此分区，所有的键根据哈希函数(CRC16[key]&16383)映射到0－16383槽内，共16384个槽位，每个节点维护部分槽及槽所映射的键值数据\n哈希函数: Hash()=CRC16[key]&16383")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"虚拟槽分区",href:"./image/rediscluster.jpg"}},[a("img",{attrs:{src:e(779),alt:"虚拟槽分区"}})])])])}),[],!1,null,null,null);t.default=r.exports},775:function(s,t,e){s.exports=e.p+"assets/img/rediscopy.0814b681.jpg"},776:function(s,t,e){s.exports=e.p+"assets/img/rediscopy02.199e0dd0.jpg"},777:function(s,t,e){s.exports=e.p+"assets/img/rediscopy03.534eefc5.jpg"},778:function(s,t,e){s.exports=e.p+"assets/img/redis51.b3bfaf4e.jpg"},779:function(s,t,e){s.exports=e.p+"assets/img/rediscluster.fc0d9ad2.jpg"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[290],{1650:function(t,a,s){"use strict";s.r(a);var e=s(26),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"idea快捷键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#idea快捷键"}},[t._v("#")]),t._v(" IDEA快捷键")]),t._v(" "),s("ol",[s("li",[s("Badge",{attrs:{text:"ctrl +alt +m"}}),t._v("  选中代码块构建成方法\n")],1),t._v(" "),s("li",[s("Badge",{attrs:{text:"ctrl +alt +T"}}),t._v("  选中代码块加try if等等\n")],1),t._v(" "),s("li",[s("Badge",{attrs:{text:"alt  + enter"}}),t._v("  自动生成序列化快捷键  \n")],1)]),t._v(" "),s("p",[t._v("需要先设置（File -> Settings -> Editor -> Inspections -> 搜索 Serialization issues ，找到 Serializable class without 'serialVersionUID' ->打上勾，Apply->OK ）")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("Badge",{attrs:{text:"alt +7"}}),t._v("   查看当前类方法    \n")],1)]),t._v(" "),s("hr"),t._v(" "),s("Badge",{attrs:{text:"Ctrl+O"}}),t._v("  快速实现接口方法的快捷键  \n"),s("ol",{attrs:{start:"5"}},[s("li",[s("Badge",{attrs:{text:"alt + enter"}}),t._v("  补全匿名类\n")],1),t._v(" "),s("li",[s("Badge",{attrs:{text:"ctrl + alt + shift + c"}}),t._v("  复制类的全类名\n")],1)]),t._v(" "),s("p",[t._v("框架=注解+反射+设计模式")]),t._v(" "),s("ol",{attrs:{start:"7"}},[s("li",[s("Badge",{attrs:{text:"Ctrl+Alt+Shift+U"}}),t._v("  open a UML class diagram in a new editor tab    \n"),s("Badge",{attrs:{text:"Ctrl+Alt+U "}}),t._v("to  open a UML class diagram in a popup window.  \n")],1),t._v(" "),s("li",[s("Badge",{attrs:{text:"ctrl + alt +B"}}),t._v("  IDEA 查找接口的实现 的快捷键\n")],1),t._v(" "),s("li",[s("Badge",{attrs:{text:" Navigate -> Type Hierarchy"}}),t._v(" 查看类的子类\n")],1),t._v(" "),s("li",[s("p",[t._v("使用IDEA将普通项目打成jar包\n"),s("a",{attrs:{href:"https://blog.csdn.net/weixin_38201936/article/details/88018493"}},[t._v("使用IDEA将普通项目打成jar包")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("普通项目打成jar包")]),t._v(" "),s("ol",[s("li",[t._v("选中Java项目工程名称，在菜单中选择 File->project structure... (快捷键Ctrl+Alt+Shift+S)")]),t._v(" "),s("li",[t._v('在弹出的窗口中左侧选中"Artifacts"，点击"+"选择jar，然后选择"from modules with dependencies"')]),t._v(" "),s("li",[t._v("Module: 一般默认是项目的名称。"),s("br"),t._v('\n配置窗口中配置"Main Class"。'),s("br"),t._v("\n选择“extract to the target JAR”，这样所有依赖的jar包都会放在生成的jar包中")]),t._v(" "),s("li",[t._v("如果出现已经存在，在项目中删除原有的MANIFEST.MF,然后重新执行上面的操作")]),t._v(" "),s("li",[t._v("点击OK保存成功后，点击build->build Artifacts    点击xxx.jar 对应的build")])])]),t._v(" "),s("ol",{attrs:{start:"11"}},[s("li",[t._v("后按住快捷键即可自动补全")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("ctrl"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("alt"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("v    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new ArrayList<String>(); 后按住快捷键即可自动补全 ")]),t._v("\n## 方式二\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ol",{attrs:{start:"11"}},[s("li",[s("Badge",{attrs:{text:"ctrl + h"}}),t._v("  查看当前类的所有子类\n")],1)]),t._v(" "),s("p",[t._v("export JAVA_HOME=/usr/java/jdk1.8.0_211-amd64\nPATH=$PATH:$JAVA_HOME/bin")]),t._v(" "),s("p",[t._v("IDEA 如何自动导入（import）\n打开 IDEA 的首选项，找到setting -> Editor | General | Auto Import。勾选上 Add unambiguous imports on the fly 和 Optimize imports on the fly (for current project)")]),t._v(" "),s("h2",{attrs:{id:"idea-2021-1-最新激活注册码-破解教程-https-www-bilibili-com-read-cv11262121"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#idea-2021-1-最新激活注册码-破解教程-https-www-bilibili-com-read-cv11262121"}},[t._v("#")]),t._v(" IDEA 2021.1 最新激活注册码 - 破解教程 https://www.bilibili.com/read/cv11262121")]),t._v(" "),s("p",[s("a",{attrs:{herf:"https://blog.lupf.cn/articles/2020/12/03/1606959540262.html"}},[t._v("https://blog.lupf.cn/articles/2020/12/03/1606959540262.html")])]),t._v(" "),s("h2",{attrs:{id:"idea也可以安装jclasslib插件-查看字节码文件-view-show-bytecode-with-jclasslib"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#idea也可以安装jclasslib插件-查看字节码文件-view-show-bytecode-with-jclasslib"}},[t._v("#")]),t._v(" idea也可以安装jclasslib插件 查看字节码文件 view ->Show ByteCode with jclasslib")]),t._v(" "),s("p",[t._v("选择重写或实现方法（select methods to override/implements）\nCtrl+O\n2.选择实现方法（select methods to implement）\nCtrl+I\n3.生成构造方法、toString方法、重写或实现方法及版权（generate...）\nAlt+Insert\n4.包围（surround with）\nCtrl+Alt+T")]),t._v(" "),s("h2",{attrs:{id:"jar包冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jar包冲突"}},[t._v("#")]),t._v(" jar包冲突")]),t._v(" "),s("p",[t._v("[https://blog.csdn.net/zhanggonglalala/article/details/88953345]")])],1)}),[],!1,null,null,null);a.default=r.exports}}]);